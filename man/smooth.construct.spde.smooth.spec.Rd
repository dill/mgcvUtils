% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spde_smooth.R
\name{smooth.construct.spde.smooth.spec}
\alias{smooth.construct.spde.smooth.spec}
\alias{Predict.matrix.spde.smooth}
\title{Matérn via SPDEs in GAMs}
\usage{
\method{smooth.construct}{spde.smooth.spec}(object, data, knots)

\method{Predict.matrix}{spde.smooth}(object, data)
}
\arguments{
\item{object}{a smooth specification object, usually generated by a term \code{s(x,bs="bs",...)}}

\item{data}{a list containing just the data (including any \code{by} variable) required by this term, 
            with names corresponding to \code{object$term} (and \code{object$by}). The \code{by} variable 
            is the last element.}

\item{knots}{a list containing any knots supplied for basis setup --- in same order and with same names as \code{data}. 
             Can be \code{NULL}. See details for further information.}
}
\description{
Uses constructors from package R-INLA to build the stochastic partial differential equation Matérn model of Lindgren et al (2011). Details also in Miller et al (2019).
}
\details{
For one dimensional smooths a mesh will be autogenerated using \code{\link[INLA:inla.mesh.1d]{INLA::inla.mesh.1d}} with \code{k} evenly spaces basis functions (degree 2 B-splines). For other cases you need to supply \code{xt$mesh} which should be an object generated by \code{\link[INLA:inla.mesh.create]{INLA::inla.mesh}}.

If you want to compare "smoothing parameter" estimates with those produced by \code{R-INLA} then you need to add the \code{control = gam.control(scalePenalty = FALSE)} option to your \code{\link[mgcv:gam]{mgcv::gam}} call.
}
\note{
The \code{INLA} package is required to use this function see \href{http://r-inla.org}{the R-INLA website} for details on installation.
}
\examples{
\dontrun{
library(mgcv)
set.seed(2) ## simulate some data... 
dat <- gamSim(1,n=400,dist="normal",scale=2)

# fit model, ensuring smoothing parameters are comparable
# to those generated by INLA
b <- gam(y~s(x2, bs="spde", k=50),data=dat,
         control = gam.control(scalePenalty = FALSE))
# look at results
summary(b)
plot(b)

# get hyperparameter estimates (as defined in Lindgren et al. 2011)
tau <- b$sp[1]
kappa <- b$sp[2]
# compute correlation range (rho) and marginal variance (sigma)
rho <- sqrt(8*1.5) / kappa
}
}
\references{
Miller, D. L., Glennie, R., & Seaton, A. E. (2019). Understanding the Stochastic Partial Differential Equation Approach to Smoothing. Journal of Agricultural, Biological and Environmental Statistics. https://doi.org/10.1007/s13253-019-00377-z
Lindgren, F., Rue, H., & Lindström, J. (2011). An explicit link between Gaussian fields and Gaussian Markov random fields: The stochastic partial differential equation approach. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 73(4), 423–498. https://doi.org/10.1111/j.1467-9868.2011.00777.x
}
\author{
David L Miller
}
